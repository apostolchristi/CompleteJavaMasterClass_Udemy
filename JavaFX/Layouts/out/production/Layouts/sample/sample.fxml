<?import javafx.scene.layout.StackPane?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<StackPane fx:controller="sample.Controller"
           xmlns:fx="http//javafx.com/fxml" >
    <Label text="The label text" style="-fx-background-color: green"/>
    <Button text="Button One"  style="-fx-background-color: red"/>
    <Label text="The second label text" style="-fx-background-color: blue"/>
</StackPane>


<!--=======================================================================================================================-->

            <!--This code was used for lesson TilePane and FlowPane (similar layouts)-->
<!--<?import javafx.scene.layout.FlowPane?>-->
<!--<?import javafx.scene.control.Button?>-->
<!--<?import javafx.scene.layout.VBox?>-->
<!--<?import javafx.scene.layout.TilePane?>-->

<!--<Button text="Button One" />-->
<!--<Button text="Button Two" />-->
<!--<Button text="Button Three" />-->
<!--<Button text="Button Four" />-->
<!--<Button text="Button Five" />-->
<!--<Button text="Button Six" />-->
<!--<Button text="Button Seven" />-->
<!--<Button text="Button Eight" />-->
<!--<Button text="Button Nine" />-->
<!--<Button text="Button Ten" />-->

<!--</TilePane>-->

<!--=======================================================================================================================-->

            <!--This code was used for lesson BorderPane-->
<!--<?import javafx.geometry.Insets?>-->
<!--<?import javafx.scene.control.Button?>-->
<!--<?import javafx.scene.layout.HBox?>-->
<!--<?import javafx.scene.control.Button?>-->
<!--<?import javafx.scene.layout.BorderPane?>-->
<!--<?import javafx.scene.control.Label?>-->

<!--<BorderPane fx:controller="sample.Controller"-->
<!--xmlns:fx="http://javafx.com/fxml">-->
<!--<top>-->
<!--<Label text="This label is in the top position" alignment="center"-->
<!--BorderPane.alignment="center"-->
<!--style="-fx-border-color: blue; -fx-border-width: 3; -fx-border-style: dashed"/>-->
<!--</top>-->
<!--<center>-->
<!--<Label text="This label is in the center position and has really looooooooooooooooooooooooooong text"/>-->
<!--</center>-->
<!--<left>-->
<!--<Label text="THis label is in the left position" alignment="center"/>-->
<!--</left>-->
<!--<right>-->
<!--<Label text="This label is in the right position"/>-->
<!--</right>-->
<!--<bottom>-->
<!--<HBox spacing="10" alignment="bottom_right">-->
<!--<padding>-->
<!--<Insets bottom="10" right="10"/> &lt;!&ndash; adding a ten pixel from the margin of bottom and right &ndash;&gt;-->
<!--</padding>-->
<!--<Button text="Okay" prefWidth="90"/>-->
<!--<Button text="Cancel" prefWidth="90"/>-->
<!--<Button text="Help" prefWidth="90"/>-->
<!--</HBox>-->
<!--</bottom>-->
<!--</BorderPane>-->

<!--=======================================================================================================================-->

            <!--This code was used for lesson HBox-->
<!--<HBox fx:controller="sample.Controller"-->
<!--xmlns:fx="http://javafx.com/fxml" alignment="bottom_right"-->
<!--style="-fx-border-color: red; -fx-border-width: 3; -fx-border-style: dashed"-->
<!--spacing="10">-->

<!--<padding>-->
<!--<Insets bottom="10" right="10"/> &lt;!&ndash; its add a ten pixel gap&ndash;&gt;-->
<!--</padding>-->

<!--<Button text="Okay" prefWidth="90"/>-->
<!--<Button text="Cancel" prefWidth="90"/>-->
<!--<Button text="Help" prefWidth="90"/>-->

<!--</HBox>-->

<!--=======================================================================================================================-->

            <!--This code was used for lesson GridPane-->

<!---->
<!--<padding>-->
<!--<Insets top="10"/> &lt;!&ndash;  its add a ten pixel gap between the first row and the title bar.&ndash;&gt;-->
<!--</padding>-->

<!--<columnConstraints>-->
<!--&lt;!&ndash; we are using the column constraints class to set the initial width of each column and we can actually use pixels or via percentage.-->
<!--Thing to remember that the ordering is important:-->
<!-- - we add a column constraints child element to the grid and within it we add a column constraints element for each columns,-->
<!--so each one of these that we're adding within this column constraints sort of block is the column the percentage width for-->
<!--the column in order, so the ordering is actually important here.-->
<!--So the first column constraints element will apply to the first column, the second to the second column etc...&ndash;&gt;-->
<!--<ColumnConstraints percentWidth="50.0"/>-->
<!--<ColumnConstraints percentWidth="50.0"/>-->
<!--</columnConstraints>-->

<!--<Button text="Button One" GridPane.rowIndex="0" GridPane.columnIndex="0"-->
<!--GridPane.halignment="RIGHT"/>-->
<!--<Button text="Button Two" GridPane.rowIndex="0" GridPane.columnIndex="1"/>-->
<!--<Button text="Button Three" GridPane.rowIndex="1" GridPane.columnIndex="0"/>-->
<!--<Button text="Button Really Long Button" GridPane.rowIndex="3" GridPane.columnIndex="0"-->
<!--GridPane.columnSpan="2"/>-->
<!--<Button text="Button Five" GridPane.rowIndex="2" GridPane.columnIndex="0"/>-->

<!--=======================================================================================================================-->

